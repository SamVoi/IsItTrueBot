#!/usr/bin/env python3
"""
–ê–Ω–∞–ª–∏–∑ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π IsItTrueBot
"""

import sys
from datetime import datetime, date
from collections import defaultdict


def analyze_memory_consumption():
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –±–æ—Ç–∞"""
    
    print("üîç –ê–Ω–∞–ª–∏–∑ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏—è –ø–∞–º—è—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π IsItTrueBot")
    print("=" * 60)
    
    # –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
    base_stats = {
        'start_time': datetime.now(),           # datetime object
        'total_queries': 0,                     # int
        'text_queries': 0,                      # int  
        'button_queries': 0,                    # int
        'categories': defaultdict(int),         # defaultdict with 3 keys max
        'today_queries': 0,                     # int
        'last_reset': datetime.now().date()    # date object
    }
    
    # –†–∞–∑–º–µ—Ä—ã –±–∞–∑–æ–≤—ã—Ö —Ç–∏–ø–æ–≤ –¥–∞–Ω–Ω—ã—Ö –≤ Python (64-bit)
    sizes = {
        'int': 28,          # Python int object
        'datetime': 48,     # datetime object  
        'date': 32,         # date object
        'str': 49,          # base string object + small string overhead
        'defaultdict': 232, # defaultdict overhead
        'dict': 232,        # base dict size
    }
    
    print("üìä –†–∞–∑–º–µ—Ä—ã –±–∞–∑–æ–≤—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤ Python:")
    for obj_type, size in sizes.items():
        print(f"   {obj_type}: {size} bytes")
    
    # –í—ã—á–∏—Å–ª—è–µ–º –±–∞–∑–æ–≤–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏
    base_memory = (
        sizes['dict'] +                    # –±–∞–∑–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å stats
        sizes['datetime'] +                # start_time
        sizes['int'] * 4 +                 # 4 int –ø–æ–ª—è
        sizes['defaultdict'] +             # categories defaultdict
        sizes['date']                      # last_reset
    )
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø–∞–º—è—Ç—å –¥–ª—è –∫–ª—é—á–µ–π defaultdict (–º–∞–∫—Å–∏–º—É–º 3 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏)
    category_keys_memory = (
        len('positive') + len('negative') + len('uncertain')  # —Å—Ç—Ä–æ–∫–∏ –∫–ª—é—á–µ–π
    ) * (sizes['str'] // len('example')) + sizes['int'] * 3   # –∑–Ω–∞—á–µ–Ω–∏—è int
    
    base_memory += category_keys_memory
    
    print(f"\nüíæ –ë–∞–∑–æ–≤–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏:")
    print(f"   –°—Ç—Ä—É–∫—Ç—É—Ä–∞ stats: {base_memory} bytes ({base_memory / 1024:.2f} KB)")
    
    # –ê–Ω–∞–ª–∏–∑ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è
    scenarios = [
        # (queries_per_day, days, description)
        (10, 1, "10 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å"),
        (100, 1, "100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å"), 
        (10000, 1, "10,000 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å"),
        
        (10, 7, "10 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å x 7 –¥–Ω–µ–π"),
        (100, 7, "100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å x 7 –¥–Ω–µ–π"),
        (10000, 7, "10,000 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å x 7 –¥–Ω–µ–π"),
        
        (10, 30, "10 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å x 30 –¥–Ω–µ–π"),
        (100, 30, "100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å x 30 –¥–Ω–µ–π"),
        (10000, 30, "10,000 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å x 30 –¥–Ω–µ–π"),
        
        (10, 365, "10 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å x 365 –¥–Ω–µ–π"),
        (100, 365, "100 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å x 365 –¥–Ω–µ–π"),
        (10000, 365, "10,000 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –¥–µ–Ω—å x 365 –¥–Ω–µ–π"),
    ]
    
    print(f"\nüìà –ê–Ω–∞–ª–∏–∑ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("=" * 60)
    
    for queries_per_day, days, description in scenarios:
        total_queries = queries_per_day * days
        
        # –í –Ω–∞—à–µ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–∞–º—è—Ç—å –ù–ï —Ä–∞—Å—Ç–µ—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–∞–ø—Ä–æ—Å–æ–≤!
        # –ú—ã —Ö—Ä–∞–Ω–∏–º —Ç–æ–ª—å–∫–æ —Å—á–µ—Ç—á–∏–∫–∏, –∞ –Ω–µ –¥–∞–Ω–Ω—ã–µ –æ –∫–∞–∂–¥–æ–º –∑–∞–ø—Ä–æ—Å–µ
        memory_consumption = base_memory
        
        print(f"\nüìã {description}:")
        print(f"   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {total_queries:,}")
        print(f"   –ü–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏: {memory_consumption} bytes ({memory_consumption / 1024:.2f} KB)")
        print(f"   –ü–∞–º—è—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å: {memory_consumption / max(total_queries, 1):.6f} bytes")
        
        # –ê–Ω–∞–ª–∏–∑ —Å —É—á–µ—Ç–æ–º –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ (–µ—Å–ª–∏ –±—ã –º—ã —Ö—Ä–∞–Ω–∏–ª–∏ –∏—Å—Ç–æ—Ä–∏—é)
        if total_queries > 1000:
            hypothetical_history_memory = total_queries * 64  # –µ—Å–ª–∏ –±—ã —Ö—Ä–∞–Ω–∏–ª–∏ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å
            print(f"   üìä –ì–∏–ø–æ—Ç–µ—Ç–∏—á–µ—Å–∫–∏ (—Å –∏—Å—Ç–æ—Ä–∏–µ–π): {hypothetical_history_memory:,} bytes ({hypothetical_history_memory / 1024 / 1024:.2f} MB)")
    
    print(f"\n" + "=" * 60)
    print("üéØ –í–´–í–û–î–´:")
    print("=" * 60)
    
    print(f"‚úÖ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ: ~{base_memory} bytes ({base_memory / 1024:.2f} KB)")
    print("‚úÖ –ü–∞–º—è—Ç—å –ù–ï —Ä–∞—Å—Ç–µ—Ç —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –∑–∞–ø—Ä–æ—Å–æ–≤")
    print("‚úÖ –û—Ç–ª–∏—á–Ω–∞—è –º–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º–æ—Å—Ç—å –¥–ª—è –ª—é–±–æ–≥–æ –æ–±—ä–µ–º–∞ —Ç—Ä–∞—Ñ–∏–∫–∞")
    print("‚úÖ –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–∞–∂–µ –¥–ª—è –º–∏–ª–ª–∏–æ–Ω–æ–≤ –∑–∞–ø—Ä–æ—Å–æ–≤")
    
    print(f"\nüîç –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–∞–º—è—Ç–∏:")
    print(f"   ‚Ä¢ –ë–∞–∑–æ–≤—ã–π —Å–ª–æ–≤–∞—Ä—å: {sizes['dict']} bytes")
    print(f"   ‚Ä¢ Datetime –æ–±—ä–µ–∫—Ç—ã: {sizes['datetime'] + sizes['date']} bytes")
    print(f"   ‚Ä¢ –¶–µ–ª—ã–µ —á–∏—Å–ª–∞ (5 —à—Ç): {sizes['int'] * 5} bytes")
    print(f"   ‚Ä¢ DefaultDict: {sizes['defaultdict']} bytes")
    print(f"   ‚Ä¢ –ö–ª—é—á–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π: {category_keys_memory} bytes")
    
    print(f"\n‚ö° –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:")
    print("   ‚Ä¢ O(1) –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    print("   ‚Ä¢ O(1) –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏")
    print("   ‚Ä¢ –ù–µ—Ç —Å–±–æ—Ä–∫–∏ –º—É—Å–æ—Ä–∞ –¥–ª—è —Å—á–µ—Ç—á–∏–∫–æ–≤")
    print("   ‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤–ª–∏—è–Ω–∏–µ –Ω–∞ GC")


def memory_comparison():
    """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–º–∏ –ø–æ–¥—Ö–æ–¥–∞–º–∏"""
    
    print(f"\n" + "=" * 60)
    print("üÜö –°–†–ê–í–ù–ï–ù–ò–ï –° –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ê–ú–ò:")
    print("=" * 60)
    
    alternatives = [
        ("SQLite –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö", "~50-100 KB —Ñ–∞–π–ª + –Ω–∞–∫–ª–∞–¥–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã"),
        ("PostgreSQL", "~10-50 MB –ø—Ä–æ—Ü–µ—Å—Å + —Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã"),
        ("Redis", "~5-20 MB –ø—Ä–æ—Ü–µ—Å—Å + —Å–µ—Ç–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"),
        ("–§–∞–π–ª–æ–≤–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ JSON", "~1-5 KB —Ñ–∞–π–ª + –¥–∏—Å–∫–æ–≤—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏"),
        ("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –ø–∞–º—è—Ç–∏", "~64 bytes * –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤"),
        ("–¢–µ–∫—É—â–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è", f"~{(232 + 28*5 + 48 + 32 + 232 + 100):.0f} bytes (—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ)")
    ]
    
    for name, consumption in alternatives:
        print(f"   üìä {name}: {consumption}")
    
    print(f"\nüèÜ –ù–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ:")
    print("   ‚úÖ –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏")
    print("   ‚úÖ –ù–µ—Ç –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π")
    print("   ‚úÖ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å")
    print("   ‚úÖ –ü—Ä–æ—Å—Ç–æ—Ç–∞ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è")
    print("   ‚úÖ –ù–µ—Ç —Ç–æ—á–µ–∫ –æ—Ç–∫–∞–∑–∞")


if __name__ == "__main__":
    analyze_memory_consumption()
    memory_comparison()
    
    print(f"\nüéâ –ó–∞–∫–ª—é—á–µ–Ω–∏–µ: –¢–µ–∫—É—â–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–∞ –¥–ª—è –∑–∞–¥–∞—á –±–æ—Ç–∞!")